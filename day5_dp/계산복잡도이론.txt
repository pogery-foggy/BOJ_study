Automata Theory
    v. FA / PDA / TM

Computability Theory

Computational Complexity
    문제를 쉬운 문제, 어려운 문제로 분류
     P / NP/ NPC

NP의 결론은 매우 어렵고 제한시간 내에 풀기 어렵기때문에 
최적해를 구하기 어렵다
그래서 근사치의 해를 구하는 방법으로 접근을 하자

P-NP
다루기 힘든 정도[intractability]
 v. 다차시간 알고리즘을 찾을 수 없는 문제를 다루기 힘든 문제라 한다.

 문제의 분류
 1. 다차시간 알고리즘을 찾은 문제
 2. 다루기 힘들다고 증명된 문제
 3. 다루기 힘들다고 증명되지 않았고, 다차시간 알고리즘도 찾지 못한 문제

 -1 다차시간 알고리즘을 찾은 문제
    모든 알고리즘들이 다차시간 알고리즘
        정렬 문제 : O(nlogn)
        정렬된 배열 검색 문제 : O(logn)
        행렬곱셈 문제 : O(n^2.38)

    다차시간이 아닌 알고리즘도 있으나, 다차시간 알고리즘을 찾은 경우
        연쇄행렬곱셈문제
        최단경로문제
        최소 비용 신장 트리(Minimum Spaning Tree) 문제
 -2 다루기 힘들다고 증명된 문제
    v비다항식(nonpolynomial) 크기의 결과를 요구하는 비현실적인 문제
    v 보기 : 모든 해밀토니안 회로를 결정하는 문제
        만일 모든 정점들 간에 이음선이 있다면, (n-1)!개의 답을 얻어야한다
        이러한 문제는 하나의 해밀토니안 회로를 구하는 문제에 비해서
        필요이상으로 많은 답을 요구하므로 사실상 비현실적이고, 
        다루기 힘든 문제로 분류된다.
    v 결정 불가능한 문제
        그 문제를 풀 수 있는 알고리즘이 존재할 수 없다고 증명이 된 문제
        예: 종료 문제(Halting Problem)등
    v. 요구가 현실적이나, 다차시간에 풀 수 없다고 증명된 문제
        이런 부류에 속하는 문제는 상대적으로 별로 없다.
-3 다루기 힘들다고 증명되지 않았고, 다차시간 알고리즘도 찾지 못한 문제
    v 많은 문제들이 이 카테고리에 속한다.
        0-1 배낭채우기 문제
        외판원 문제
        m-색칠하기 문제 
        해밀토니안 회로 문제 등등
    v 이러한 문제들은 NP(Nondeteministic Polynomial) 문제에 속한다.

최적화 문제 vs 결정문제
1. 최적화 문제 optimization Problem
    v. 최적의 해를 찾자
    예) 그래프 G에서 길이가 가장 짧은 해밀토니안 경로는 얼마인가?
2.결정 문제
    대답이 예 또는 아니오로 제한된 문제
    그래프 G에서 길이가 k이하인 해밀토니안 경로가 존재 하는가?

최적화 문제에 대한 해답을 가지고 결정 문제에 대한 해답은 저절로 얻는다.
어떤 최적화 문제에 대해서 다차시간 알고리즘이 있다면, 그 알고리즘으로부터
그 문제에 해당하는 결정 문제에 대한 다차시간 알고리즘을 쉽게 유추해 낼 수 있다.
!!!NP와 P를 다룰 때 결정 문제만 고려해도 충분하다.

P와 NP의 정의
P : Can be solbed on a DTM in an amount of time that is
NP : Solutions can be verified in polynomial time, or equivalently.
whose solution can be found in polynomial time on a NDTM